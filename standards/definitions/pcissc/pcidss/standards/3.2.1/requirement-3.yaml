---
requirements:
parent: 2
items:
  - id: 3.1
    description: "Keep cardholder data storage to a minimum by implementing data retention and disposal policies, procedures and processes that include at least the following for all cardholder data (CHD) storage:
    
    • Limiting data storage amount and retention time to that which is required for legal, regulatory, and/or business requirements
    • Specific retention requirements for cardholder data
    • Processes for secure deletion of data when no longer needed
    • A quarterly process for identifying and securely deleting stored cardholder data that exceeds defined retention.
    "
    description_note: ""
    testing_procedures:
      - id: 3.1.a
        description: "Examine the data retention and disposal policies, procedures and processes to verify they include the following for all cardholder data (CHD) storage:
        
        • Limiting data storage amount and retention time to that which is required for legal, regulatory, and/or business requirements.
        • Specific requirements for retention of cardholder data (for example, cardholder data needs to be held for X period for Y business reasons).
        • Processes for secure deletion of cardholder data when no longer needed for legal, regulatory, or business reasons.
        • A quarterly process for identifying and securely deleting stored cardholder data that exceeds defined retention requirements.
        "
        description_note: ""
      - id: 3.1.b
        description: "Interview personnel to verify that:
        
        • All locations of stored cardholder data are included in the
        data retention and disposal processes.
        • Either a quarterly automatic or manual process is in place to identify and securely delete stored cardholder data.
        • The quarterly automatic or manual process is performed for all locations of cardholder data.
        "
        description_note: ""
      - id: 3.1.c
        description: "For a sample of system components that store cardholder data:
        
        • Examine files and system records to verify that the data stored does not exceed the requirements defined in the data retention policy
        • Observe the deletion mechanism to verify data is deleted securely.
        "
        description_note: ""
    guidance: "A formal data retention policy identifies what data needs to be retained, and where that data resides so it can be securely destroyed or deleted as soon as it is no longer needed.
    
    The only cardholder data that may be stored after authorization is the primary account number or PAN (rendered unreadable), expiration date, cardholder name, and service code.
    
    Understanding where cardholder data is located is necessary so it can be properly retained or disposed of when no longer needed. In order to define appropriate retention requirements, an entity first needs to understand their own business needs as well as any legal or regulatory obligations that apply to their industry, and/or that apply to the type of data being retained.

    Identifying and deleting stored data that has exceeded its specified retention period prevents unnecessary retention of data that is no longer needed. This process may be automated or manual or a combination of both. For example, a programmatic procedure (automatic or manual) to locate and remove data and/or a manual review of data storage areas could be performed.
    
    Implementing secure deletion methods ensure that the data cannot be retrieved when it is no longer needed.
    
    Remember, if you don't need it, don't store it!
    "
    guidance_note: ""
  - id: 3.2
    description: "Do not store sensitive authentication data after authorization (even if encrypted). If sensitive authentication data is received, render all data unrecoverable upon completion of the authorization process.

    It is permissible for issuers and companies that support issuing services to store sensitive authentication data if:
    • There is a business justification and
    • The data is stored securely.

    Sensitive authentication data includes the data as cited in the following Requirements 3.2.1 through 3.2.3:
    "
    description_note: ""
    testing_procedures:
      - id: 3.2.a
        description: "For issuers and/or companies that support issuing services and store sensitive authentication data, review policies and interview personnel to verify there is a documented business justification for the storage of sensitive authentication data.
        "
        description_note: ""
      - id: 3.2.b
        description: "For issuers and/or companies that support issuing services and store sensitive authentication data, examine data stores and system configurations to verify that the sensitive authentication data is secured.
        "
        description_note: ""
      - id: 3.2.c
        description: "For all other entities, if sensitive authentication data is received, review policies and procedures, and examine system configurations to verify the data is not retained after authorization.
        "
        description_note: ""
      - id: 3.2.d
        description: "For all other entities, if sensitive authentication data is received, review procedures and examine the processes for securely deleting the data to verify that the data is unrecoverable.
        "
        description_note: ""
    guidance: "Sensitive authentication data consists of full track data, card validation code or value, and PIN data. Storage of sensitive authentication data after authorization is prohibited! This data is very valuable to malicious individuals as it allows them to generate counterfeit payment cards and create fraudulent transactions.
    
    Entities that issue payment cards or that perform or support issuing services will often create and control sensitive authentication data as part of the issuing function. It is allowable for companies that perform, facilitate, or support issuing services to store sensitive authentication data ONLY IF they have a legitimate business need to store such data.
    
    It should be noted that all PCI DSS requirements apply to issuers, and the only exception for issuers and issuer processors is that sensitive authentication data may be retained if there is a legitimate reason to do so. A legitimate reason is one that is necessary for the performance of the function being provided for the issuer and not one of convenience. Any such data must be stored securely and in accordance with all PCI DSS and specific payment brand requirements.

    For non-issuing entities, retaining sensitive authentication data post-authorization is not permitted.
    "
    guidance_note: ""
    items:
      - id: 3.2.1
        description: "Do not store the full contents of any track (from the magnetic stripe located on the back of a card, equivalent data contained on a chip, or elsewhere) after authorization. This data is alternatively called full track, track, track 1, track 2, and magnetic-stripe data.
        "
        description_note: "In the normal course of business, the following data elements from the magnetic stripe may need to be retained:

        • The cardholder’s name
        • Primary account number (PAN)
        • Expiration date
        • Service code

        To minimize risk, store only these data elements as needed for business.
        "
        testing_procedures:
          - id: 3.2.1
            description: "For a sample of system components, examine data sources including but not limited to the following, and verify that the full contents of any track from the magnetic stripe on the back of card or equivalent data on a chip are not stored after authorization:
            
            • Incoming transaction data
            • All logs (for example, transaction, history, debugging,
            error)
            • History files
            • Trace files
            • Several database schemas
            • Database contents.
            "
            description_note: ""
        guidance: "If full track data is stored, malicious individuals who obtain that data can use it to reproduce payment cards and complete fraudulent transactions.
        "
        guidance_note: ""
      - id: 3.2.2
        description: "Do not store the card verification code or value (three-digit or four-digit number printed on the front or back of a payment card used to verify card-not- present transactions) after authorization.
        "
        description_note: ""
        testing_procedures:
          - id: 3.2.2
            description: "For a sample of system components, examine data sources, including but not limited to the following, and verify that the three-digit or four-digit card verification code or value printed on the front of the card or the signature panel (CVV2, CVC2, CID, CAV2 data) is not stored after authorization:
            
            • Incoming transaction data
            • All logs (for example, transaction, history, debugging,
            error)
            • History files
            • Trace files
            • Several database schemas
            • Database contents.
            "
            description_note: ""
        guidance: "The purpose of the card validation code is to protect \"card-not-present\" transactions—Internet or mail order/telephone order (MO/TO) transactions—where the consumer and the card are not present.
        
        If this data is stolen, malicious individuals can execute fraudulent Internet and MO/TO transactions.
        "
        guidance_note: ""
      - id: 3.2.3
        description: "Do not store the personal identification number (PIN) or the encrypted PIN block after authorization.
        "
        description_note: ""
        testing_procedures:
          - id: 3.2.3
            description: "For a sample of system components, examine data sources, including but not limited to the following and verify that PINs and encrypted PIN blocks are not stored after authorization:
            
            • Incoming transaction data
            • All logs (for example, transaction, history, debugging,
            error)
            • History files
            • Trace files
            • Several database schemas
            • Database contents.
            "
        guidance: "These values should be known only to the card owner or bank that issued the card. If this data is stolen, malicious individuals can execute fraudulent PIN-based debit transactions (for example, ATM withdrawals).
        "
        guidance_note: ""
  - id: 3.3
    description: "Mask PAN when displayed (the first six and last four digits are the maximum number of digits to be displayed), such that only personnel with a legitimate business need can see more than the first six/last four digits of the PAN.
    "
    description_note: "This requirement does not supersede stricter requirements in place for displays of cardholder data—for example, legal or payment card brand requirements for point- of-sale (POS) receipts.
    "
    testing_procedures:
      - id: 3.3.a
        description: "Examine written policies and procedures for masking the display of PANs to verify:
        
        • A list of roles that need access to displays of more than the first six/last four (includes full PAN) is documented, together with a legitimate business need for each role to have such access.
        • PAN must be masked when displayed such that only personnel with a legitimate business need can see more than the first six/last four digits of the PAN.
        • All roles not specifically authorized to see the full PAN must only see masked PANs.
        "
        description_note: ""
      - id: 3.3.b
        description: "Examine system configurations to verify that full PAN is only displayed for users/roles with a documented business need, and that PAN is masked for all other requests.
        "
        description_note: ""
      - id: 3.3.c
        description: "Examine displays of PAN (for example, on screen, on paper receipts) to verify that PANs are masked when displaying cardholder data, and that only those with a legitimate business need are able to see more than the first six/last four digits of the PAN.
        "
        description_note: ""
    guidance: "The display of full PAN on items such as computer screens, payment card receipts, faxes, or paper reports can result in this data being obtained by unauthorized individuals and used fraudulently. Ensuring that full PAN is only displayed for those with a legitimate business need to see the full PAN minimizes the risk of unauthorized persons gaining access to PAN data.
    
    The masking approach should always ensure that only the minimum number of digits is displayed as necessary to perform a specific business function. For example, if only the last four digits are needed to perform a business function, mask the PAN so that individuals performing that function can view only the last four digits. As another example, if a function needs access to the bank identification number (BIN) for routing purposes, unmask only the BIN digits (traditionally the first six digits) during that function.
    
    This requirement relates to protection of PAN displayed on screens, paper receipts, printouts, etc., and is not to be confused with Requirement 3.4 for protection of PAN when stored in files, databases, etc.
    "
    guidance_note: ""
  - id: 3.4
    description: "Render PAN unreadable anywhere it is stored (including on portable digital media, backup media, and in logs) by using any of the following approaches:
    
    • One-way hashes based on strong cryptography, (hash must be of the entire PAN)
    • Truncation (hashing cannot be used to replace the truncated segment of PAN)
    • Index tokens and pads (pads must be securely stored)
    • Strong cryptography with associated key-management processes and procedures.
    "
    description_note: "It is a relatively trivial effort for a malicious individual to reconstruct original PAN data if they have access to both the truncated and hashed version of a PAN. Where hashed and truncated versions of the same PAN are present in an entity’s environment, additional controls must be in place to ensure that the hashed and truncated versions cannot be correlated to reconstruct the original PAN.
    "
    testing_procedures:
      - id: 3.4.a
        description: "Examine documentation about the system used to protect the PAN, including the vendor, type of system/process, and the encryption algorithms (if applicable) to verify that the PAN is rendered unreadable using any of the following methods:
        
        • One-way hashes based on strong cryptography,
        • Truncation
        • Index tokens and pads, with the pads being securely stored
        • Strong cryptography, with associated key-management processes and procedures.
        "
        description_note: ""
      - id: 3.4.b
        description: "Examine several tables or files from a sample of data repositories to verify the PAN is rendered unreadable (that is, not stored in plain-text).
        "
        description_note: ""
      - id: 3.4.c
        description: "Examine a sample of removable media (for example, back-up tapes) to confirm that the PAN is rendered unreadable
        "
        description_note: ""
      - id: 3.4.d
        description: "Examine a sample of audit logs, including payment application logs, to confirm that PAN is rendered unreadable or is not present in the logs.
        "
        description_note: ""
      - id: 3.4.e
        description: "If hashed and truncated versions of the same PAN are present in the environment, examine implemented controls to verify that the hashed and truncated versions cannot be correlated to reconstruct the original PAN.
        "
        description_note: ""
    guidance: "PANs stored in primary storage (databases, or flat files such as text files spreadsheets) as well as non-primary storage (backup, audit logs, exception or troubleshooting logs) must all be protected.
    
    One-way hash functions based on strong cryptography can be used to render cardholder data unreadable. Hash functions are appropriate when there is no need to retrieve the original number (one-way hashes are irreversible). It is recommended, but not currently a requirement, that an additional, random input value be added to the cardholder data prior to hashing to reduce the feasibility of an attacker comparing the data against (and deriving the PAN from) tables of pre- computed hash values.
    
    The intent of truncation is to permanently remove a segment of PAN data so that only a portion (generally not to exceed the first six and last four digits) of the PAN is stored.
    
    An index token is a cryptographic token that replaces the PAN based on a given index for an unpredictable value. A one-time pad is a system in which a randomly generated private key is used only once to encrypt a message that is then decrypted using a matching one-time pad and key.
    
    The intent of strong cryptography (as defined in the PCI DSS and PA-DSS Glossary of Terms, Abbreviations, and Acronyms) is that the encryption be based on an industry-tested and accepted algorithm (not a proprietary or \"home- grown\" algorithm) with strong cryptographic keys.
    
    By correlating hashed and truncated versions of a given PAN, a malicious individual may easily derive the original PAN value. Controls that prevent the correlation of this data will help ensure that the original PAN remains unreadable.
    "
    guidance_note: ""
    items:
      - id: 3.4.1
        description: "If disk encryption is used (rather than file- or column-level database encryption), logical access must be managed separately and independently of native operating system authentication and access control mechanisms (for example, by not using local user account databases or general network login credentials). Decryption keys must not be associated with user accounts.
        "
        description_note: "This requirement applies in addition to all other PCI DSS encryption and key- management requirements.
        "
        testing_procedures:
          - id: 3.4.1.a
            description: "If disk encryption is used, inspect the configuration and observe the authentication process to verify that logical access to encrypted file systems is implemented via a mechanism that is separate from the native operating system’s authentication mechanism (for example, not using local user account databases or general network login credentials).
            "
            description_note: ""
          - id: 3.4.1.b
            description: "Observe processes and interview personnel to verify that cryptographic keys are stored securely (for example, stored on removable media that is adequately protected with strong access controls).
            "
            description_note: ""
          - id: 3.4.1.c
            description: "Examine the configurations and observe the processes to verify that cardholder data on removable media is encrypted wherever stored.
            "
            description_note: "If disk encryption is not used to encrypt removable media, the data stored on this media will need to be rendered unreadable through some other method.
            "
        guidance: "The intent of this requirement is to address the acceptability of disk-level encryption for rendering cardholder data unreadable. Disk-level encryption encrypts the entire disk/partition on a computer and automatically decrypts the information when an authorized user requests it. Many disk- encryption solutions intercept operating system read/write operations and carry out the appropriate cryptographic transformations without any special action by the user other than supplying a password or pass phrase upon system startup or at the beginning of a session. Based on these characteristics of disk-level encryption, to be compliant with this requirement, the method cannot:
        
        1) Use the same user account authenticator as the operating system, or
        
        2) Use a decryption key that is associated with or derived from the system’s local user account database or general network login credentials.
        
        Full disk encryption helps to protect data in the event of physical loss of a disk and therefore may be appropriate for portable devices that store cardholder data.
        "
        guidance_note: ""
  - id: 3.5
    description: "Document and implement procedures to protect keys used to secure stored cardholder data against disclosure and misuse:
    "
    description_note: "This requirement applies to keys used to encrypt stored cardholder data, and also applies to key-encrypting keys used to protect data-encrypting keys—such key- encrypting keys must be at least as strong as the data-encrypting key.
    "
    testing_procedures:
      - id: 3.5
        description: "Examine key-management policies and procedures to verify processes are specified to protect keys used for encryption of cardholder data against disclosure and misuse and include at least the following:
        
        • Access to keys is restricted to the fewest number of custodians necessary.
        • Key-encrypting keys are at least as strong as the data- encrypting keys they protect.
        • Key-encrypting keys are stored separately from data- encrypting keys.
        • Keys are stored securely in the fewest possible locations and forms.
        "
        description_note: ""
    guidance: "Cryptographic keys must be strongly protected because those who obtain access will be able to decrypt data. Key-encrypting keys, if used, must be at least as strong as the data-encrypting key in order to ensure proper protection of the key that encrypts the data as well as the data encrypted with that key.
    
    The requirement to protect keys from disclosure and misuse applies to both data-encrypting keys and key-encrypting keys. Because one key- encrypting key may grant access to many data- encrypting keys, the key-encrypting keys require strong protection measures.
    "
    guidance_note: ""
    items:
      - id: 3.5.1
        description: "Additional requirement for service providers only: Maintain a documented description of the cryptographic architecture that includes:
        
        • Details of all algorithms, protocols, and keys used for the protection of cardholder data, including key strength and expiry date
        • Description of the key usage for each key
        • Inventory of any HSMs and other SCDs used for key management
        "
        description_note: ""
        testing_procedures:
          - id: 3.5.1
            description: "Interview responsible personnel and review documentation to verify that a document exists to describe the cryptographic architecture, including:
            
            • Details of all algorithms, protocols, and keys used for the protection of cardholder data, including key strength and expiry date
            • Description of the key usage for each key
            • Inventory of any HSMs and other SCDs used for key management
            "
            description_note: ""
        guidance: "Maintaining current documentation of the cryptographic architecture enables an entity to understand the algorithms, protocols, and cryptographic keys used to protect cardholder data, as well as the devices that generate, use and protect the keys. This allows an entity to keep pace with evolving threats to their architecture, enabling them to plan for updates as the assurance levels provided by different algorithms/key strengths changes. Maintaining such documentation also allows an entity to detect lost or missing keys or key-management devices, and identify unauthorized additions to their cryptographic architecture.
        "
        guidance_note: "This requirement applies only when the entity being assessed is a service provider.
        "
      - id: 3.5.2
        description: "Restrict access to cryptographic keys to the fewest number of custodians necessary.
        "
        description_note: ""
        testing_procedures:
          - id: 3.5.2
            description: "Examine user access lists to verify that access to keys is restricted to the fewest number of custodians necessary.
            "
            description_note: ""
        guidance: "There should be very few who have access to cryptographic keys (reducing the potential for rending cardholder data visible by unauthorized parties), usually only those who have key custodian responsibilities.
        "
        guidance_note: ""
      - id: 3.5.3
        description: "Store secret and private keys used to encrypt/decrypt cardholder data in one (or more) of the following forms at all times:
        
        • Encrypted with a key-encrypting key that is at least as strong as the data- encrypting key, and that is stored separately from the data-encrypting key
        • Within a secure cryptographic device (such as a hardware (host) security module (HSM) or PTS-approved point-of-interaction device)
        • As at least two full-length key components or key shares, in accordance with an industry- accepted method
        "
        description_note: "It is not required that public keys be stored in one of these forms.
        "
        testing_procedures:
          - id: 3.5.3.a
            description: "Examine documented procedures to verify that cryptographic keys used to encrypt/decrypt cardholder data must only exist in one (or more) of the following forms at all times.
            
            • Encrypted with a key-encrypting key that is at least as strong as the data-encrypting key, and that is stored separately from the data-encrypting key
            • Within a secure cryptographic device (such as a hardware (host) security module (HSM) or PTS-approved point-of-interaction device)
            • As key components or key shares, in accordance with an industry-accepted method
            "
            description_note: ""
          - id: 3.5.3.b
            description: "Examine system configurations and key storage locations to verify that cryptographic keys used to encrypt/decrypt cardholder data exist in one (or more) of the following form at all times.
            
            • Encrypted with a key-encrypting key.
            • Within a secure cryptographic device (such as a hardware (host) security module (HSM) or PTS-approved point-of-interaction device).
            • As key components or key shares, in accordance with an industry-accepted method.
            "
            description_note: ""
          - id: 3.5.3.c
            description: "Wherever key-encrypting keys are used, examine system configurations and key storage locations to verify:
            
            • Key-encrypting keys are at least as strong as the data- encrypting keys they protect.
            • Key-encrypting keys are stored separately from data- encrypting keys.
            "
            description_note: ""
        guidance: "Cryptographic keys must be stored securely to prevent unauthorized or unnecessary access that could result in the exposure of cardholder data.
        It is not intended that the key-encrypting keys be encrypted, however they are to be protected against disclosure and misuse as defined in Requirement 3.5. If key-encrypting keys are used, storing the key-encrypting keys in physically and/or logically separate locations from the data- encrypting keys reduces the risk of unauthorized access to both keys.
        "
        guidance_note: ""
      - id: 3.5.4
        description: "Store cryptographic keys in the fewest possible locations.
        "
        description_note: ""
        testing_procedures:
          - id: 3.5.4
            description: "Examine key storage locations and observe processes to verify that keys are stored in the fewest possible locations.
            "
            description_note: ""
        guidance: "Storing cryptographic keys in the fewest locations helps an organization to keep track and monitor all key locations, and minimizes the potential for keys to be exposed to unauthorized parties.
        "
        guidance_note: ""
